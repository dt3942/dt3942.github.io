// Function to draw the image from the byte array on a canvas

const imageDataArray = [
0xB6, 0x49, 0x00, 0xB6, 0x6D, 0x00, 0x92, 0x49, 0x55, 0x92, 0x49, 
0x00, 0x92, 0x49, 0x55, 0x92, 0x49, 0x55, 0x92, 0x49, 0x00, 0x92, 
0x24, 0x00, 0x92, 0x49, 0x00, 0x92, 0x49, 0x00, 0xB6, 0x49, 0x00, 
0xB6, 0x49, 0x00, 0x92, 0x6D, 0x55, 0xB6, 0x6D, 0x00, 0xB6, 0x49, 
0x00, 0xB6, 0x49, 0x00, 0xB6, 0x49, 0x00, 0xB6, 0x49, 0x00, 0xB6, 
0x49, 0x00, 0x92, 0x49, 0x55, 0x6D, 0x49, 0x55, 0x92, 0x49, 0x55, 
0x6D, 0x49, 0x00, 0x92, 0x49, 0x00, 0x92, 0x49, 0x55, 0xB6, 0x49, 
0x00, 0xB6, 0x49, 0x00, 0xB6, 0x49, 0x00, 0xB6, 0x49, 0x00, 0xB6, 
0x6D, 0x00, 0xDB, 0x49, 0x00, 0xB6, 0x6D, 0x00, 0xDB, 0x6D, 0x00, 
0xDB, 0x6D, 0x00, 0xDB, 0x6D, 0x00, 0xDB, 0x6D, 0x00, 0x92, 0x49, 
0x55, 0x92, 0x49, 0x00, 0x92, 0x49, 0x00, 0x92, 0x49, 0x00, 0x92, 
0x24, 0x00, 0x92, 0x49, 0x00, 0x92, 0x49, 0x00, 0xB6, 0x49, 0x00, 
0xB6, 0x49, 0x00, 0xB6, 0x6D, 0x00, 0xB6, 0x49, 0x00, 0xDB, 0x6D, 
0x00, 0xDB, 0x6D, 0x00, 0xB6, 0x6D, 0x00, 0xB6, 0x6D, 0x00, 0xB6, 
0x6D, 0x00, 0xDB, 0x6D, 0x00, 0xB6, 0x49, 0x55, 0x92, 0x49, 0x55, 
0x92, 0x49, 0x55, 0x92, 0x49, 0x55, 0x6D, 0x49, 0x00, 0x6D, 0x24, 
0x55, 0xB6, 0x49, 0x00, 0xB6, 0x49, 0x00, 0xB6, 0x6D, 0x00, 0xDB, 
0x6D, 0x00, 0xDB, 0x6D, 0x00, 0xDB, 0x92, 0x00, 0xDB, 0x92, 0x00, 
0xDB, 0x92, 0x55, 0xDB, 0x92, 0x00, 0xDB, 0x92, 0x00, 0xDB, 0x92, 
0x00, 0xDB, 0x6D, 0x00, 0x92, 0x49, 0x55, 0xB6, 0x49, 0x55, 0xB6, 
0x6D, 0x55, 0x6D, 0x49, 0x55, 0x6D, 0x49, 0x00, 0xB6, 0x49, 0x00, 
0xB6, 0x49, 0x00, 0xB6, 0x6D, 0x55, 0xDB, 0x6D, 0x00, 0xDB, 0x6D, 
0x00, 0xDB, 0x6D, 0x55, 0xDB, 0x92, 0x00, 0xDB, 0x92, 0x00, 0xDB, 
0x92, 0x00, 0xDB, 0x92, 0x00, 0xDB, 0x92, 0x00, 0xDB, 0x92, 0x00, 
0x92, 0x6D, 0x00, 0x92, 0x6D, 0x00, 0xB6, 0x6D, 0x00, 0x49, 0x49, 
0x55, 0x6D, 0x24, 0x00, 0x6D, 0x49, 0x00, 0x92, 0x24, 0x00, 0xDB, 
0x6D, 0x00, 0xDB, 0x6D, 0x00, 0xDB, 0x92, 0x00, 0xDB, 0x92, 0x55, 
0xDB, 0x92, 0x55, 0xFF, 0xB6, 0x00, 0xFF, 0xB6, 0x00, 0xFF, 0xB6, 
0x55, 0xFF, 0xB6, 0x55, 0xFF, 0x92, 0x55, 0xB6, 0x6D, 0x55, 0xB6, 
0x6D, 0x00, 0xB6, 0x49, 0x55, 0x6D, 0x49, 0x00, 0x49, 0x49, 0x55, 
0x6D, 0x49, 0x00, 0x6D, 0x49, 0x55, 0x92, 0x49, 0x00, 0xDB, 0x92, 
0x00, 0xDB, 0xB6, 0x00, 0xDB, 0xB6, 0x55, 0xDB, 0xDB, 0x55, 0xFF, 
0xDB, 0x55, 0xFF, 0xDB, 0x55, 0xDB, 0xB6, 0x55, 0xB6, 0x92, 0x00, 
0x6D, 0x49, 0x00, 0xB6, 0x6D, 0x00, 0xB6, 0x6D, 0x55, 0xB6, 0x6D, 
0x55, 0x6D, 0x49, 0x00, 0x6D, 0x24, 0x00, 0x6D, 0x24, 0x00, 0x6D, 
0x49, 0x55, 0x6D, 0x49, 0x55, 0xDB, 0x92, 0x00, 0xFF, 0xB6, 0x00, 
0xFF, 0xDB, 0x55, 0xFF, 0xDB, 0x55, 0xFF, 0xDB, 0x55, 0xFF, 0xB6, 
0x55, 0x92, 0x49, 0x00, 0x6D, 0x24, 0x00, 0xFF, 0xDB, 0x55, 0xDB, 
0x92, 0x55, 0xDB, 0x6D, 0x00, 0xB6, 0x6D, 0x55, 0x6D, 0x49, 0x00, 
0x6D, 0x24, 0x00, 0x6D, 0x24, 0x55, 0x6D, 0x49, 0x00, 0x6D, 0x49, 
0x00, 0xFF, 0x92, 0x55, 0xDB, 0xB6, 0x55, 0xFF, 0xDB, 0x55, 0xFF, 
0xDB, 0x55, 0xFF, 0xDB, 0x55, 0xFF, 0xB6, 0x55, 0x6D, 0x24, 0x00, 
0x49, 0x24, 0x00, 0xFF, 0xDB, 0x55, 0xDB, 0x92, 0x55, 0xB6, 0x6D, 
0x00, 0xDB, 0x6D, 0x55, 0x6D, 0x49, 0x55, 0x49, 0x49, 0x00, 0x6D, 
0x49, 0x55, 0x6D, 0x49, 0x00, 0x6D, 0x49, 0x00, 0xB6, 0x6D, 0x00, 
0xFF, 0xDB, 0x00, 0xDB, 0xDB, 0x55, 0xFF, 0xDB, 0x55, 0xFF, 0xDB, 
0x55, 0xB6, 0x6D, 0x00, 0x49, 0x24, 0x00, 0x6D, 0x49, 0x00, 0xDB, 
0xFF, 0xAA, 0xFF, 0xB6, 0x55, 0xDB, 0x6D, 0x55, 0xDB, 0x6D, 0x55, 
0x6D, 0x49, 0x55, 0x6D, 0x49, 0x00, 0x6D, 0x49, 0x00, 0x6D, 0x49, 
0x00, 0x6D, 0x49, 0x55, 0x92, 0x49, 0x55, 0xB6, 0x92, 0x00, 0xFF, 
0xDB, 0x55, 0x49, 0x24, 0x00, 0xB6, 0xB6, 0x55, 0xFF, 0xFF, 0xAA, 
0xFF, 0xFF, 0x55, 0xDB, 0xFF, 0xAA, 0xFF, 0xFF, 0xAA, 0xFF, 0xFF, 
0x55, 0xFF, 0xDB, 0xAA, 0xB6, 0x92, 0x00, 0x6D, 0x49, 0x00, 0x49, 
0x49, 0x55, 0x6D, 0x49, 0x55, 0x6D, 0x49, 0x55, 0x6D, 0x49, 0x55, 
0x92, 0x49, 0x55, 0xB6, 0x6D, 0x00, 0x92, 0x49, 0x00, 0x6D, 0x49, 
0x00, 0xFF, 0xFF, 0xAA, 0xFF, 0xFF, 0xAA, 0xFF, 0xFF, 0xAA, 0xFF, 
0xFF, 0xAA, 0xFF, 0xFF, 0xAA, 0xFF, 0xFF, 0xAA, 0xFF, 0xDB, 0x55, 
0xDB, 0x92, 0x00, 0x6D, 0x49, 0x55, 0x6D, 0x49, 0x55, 0x6D, 0x49, 
0x55, 0x6D, 0x49, 0x00, 0x6D, 0x49, 0x55, 0x92, 0x49, 0x00, 0x92, 
0x6D, 0x00, 0x6D, 0x49, 0x00, 0x92, 0x92, 0x00, 0xFF, 0xFF, 0xAA, 
0xFF, 0xFF, 0xAA, 0xFF, 0xFF, 0xAA, 0xFF, 0xFF, 0xAA, 0xFF, 0xFF, 
0xAA, 0xFF, 0xFF, 0x55, 0xFF, 0xFF, 0xAA, 0xDB, 0x92, 0x00 
];

function drawImageFromByteArray(byteArray) {
    const canvas = document.getElementById('myCanvas');
    const context = canvas.getContext('2d');
    const imgData = context.createImageData(canvas.width, canvas.height);
    
    for (let i = 0; i < byteArray.length; i += 3) {
        const r = byteArray[i];
        const g = byteArray[i + 1];
        const b = byteArray[i + 2];
        
        const index = (i / 3) * 4;
        imgData.data[index] = r;
        imgData.data[index + 1] = g;
        imgData.data[index + 2] = b;
        imgData.data[index + 3] = 255; // Alpha value (255 is fully opaque)
    }
    
    context.putImageData(imgData, 0, 0);
}

// Draw the image on the canvas
drawImageFromByteArray(imageDataArray);
